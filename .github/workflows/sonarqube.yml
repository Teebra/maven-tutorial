name: SonarQube analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarQube to decorate PRs with analysis results

jobs:
  Analysis:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Build with Maven
        run: mvn clean install

      - name: Archive Maven Package
        uses: actions/upload-artifact@v2
        with:
          name: jar_package
          path: target/*.jar

      - name: Analyze with SonarQube

        # You can pin the exact commit or the version.
        # uses: SonarSource/sonarqube-scan-action@v1.1.0
        uses: SonarSource/sonarqube-scan-action@7295e71c9583053f5bf40e9d4068a0c974603ec8
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}  # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on SonarQube, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}   # add the URL of your instance to the secrets of this repo with the name SONAR_HOST_URL (Settings > Secrets > Actions > add new repository secret)
        with:
          args:
            -Dsonar.projectKey=sonartest
            -Dsonar.projectName=sonartest
            -Dsonar.sources=src/main/java
            -Dsonar.java.binaries=**classes**
            -Dsonar.exclusions=**package-info.**
            -Dsonar.sourceEncoding=UTF-8 
            -Dsonar.analysis.mode=publish
            -Dsonar.dynamicAnalysis=reuseReports
            #-Dsonar.projectBaseDir=
            #-Dsonar.tests=
            #-Dsonar.verbose=

